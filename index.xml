<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://example.org/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>张淼的第二次作业</title>
      <link>http://example.org/post/mia1015/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/post/mia1015/</guid>
      <description>技术学习与做事情 技术都是死的，人是活的。 在编程的时候建立对象之间的关系，建立本地和远程的关系，建立内容和系统的关系，是我们要做的事情。
命令大家都会照着写，写了计算机都会去执行。但真正懂不懂，还是看有没有这种联系的感觉。 学技术其实就是学会建立这种联系的过程。
命令靠背是记不住的，下次照样不会，懂了道理，命令上网查一查就知道了。
上次做作业的时候，自己理解的也不深刻。自己的照猫画虎搞完之后，教同组同学搞的时候不知道什么地方没有搞对出了问题，导致不会解决，后来回家问了别人（我老公程序员），他马上就指出了问题所在，试了一下，果真成功了。这就是知道所以然的。这个过程是可以学习的。
在没学的时候，甚至哪里是命令，哪里是参数都搞不清，复制都复制错了地方，这就是没感觉，学习的时候不能只抄命令和参数，而是要知道这个命令是在执行什么动作，为什么要这样做，之后会怎样，最终为了什么。
在上传一个文件的时候add，commit,push,需要执行一系列的命令和参数才能执行成功，并且还要按照正确的顺序，而且环境发生变化的时候必须与人合作，必须要先执行pull，吸取别人的想法和信息. 不止是程序有这样的逻辑，创业做事情也是这样的逻辑，不是单一因素决定成败，而是与人合作的一系列的战略选择与正确执行。
往大了说，学技术可能跟我们做创业是一样的。眼前做了一个事情，或者功能。就像一个简单的命令，前因后果所以然搞明白非常重要。这个命令的执行环境，执行对象，执行结果，必要性（不做会怎么样），一切都是环环相扣的过程。这个分析过程我觉得和技术一样，也是可以学习的，只是学习环境非常不标准化。来xcamp,我们应该就是在一个相对标准化的环境中，学习掌握这个过程。</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>http://example.org/post/hello/</link>
      <pubDate>Thu, 05 Oct 2017 21:26:14 +0800</pubDate>
      
      <guid>http://example.org/post/hello/</guid>
      <description>Mia 在xcamp的第一次作业记录 1. github安装 下载：https://git-scm.com/downloads 安装教程： http://blog.csdn.net/helinlin007/article/details/50358633 http://jingyan.baidu.com/article/ceb9fb10b918a48cac2ba07d.html
2. atom安装 下载：https://atom.io
3. hugo安装 下载：https://github.com/gohugoio/hugo/releases 二进制文件可以直接运行 /usr/bin/ruby -e &amp;ldquo;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot; 粘贴以上代码在terminal 安装homebrew homebrew参考地址：https://brew.sh/index_zh-cn.html 然后执行 :brew install hugo 测试完成：hugo version 返回版本信息
4. 申请netlify https://www.netlify.com
使用教程：https://www.freehao123.com/netlify/
5. 开始建立站点 hugo教程：http://www.cnblogs.com/fnng/p/7110957.html 在终端用mkdir建立站点目录 rm -tf为删除目录 遇到问题：在终端不能识别hugo命令。发现Hugo虽然时二进制文件但是不能直接使用，需要用homebrew 命令安装，homebrew 命令也不认，那么先安装homebrew. 补充以上步骤及到hugo安装章节 开始用hugo 创建个人站点： 执行 hugo new site blog
hugo搭建站点教程：http://www.cnblogs.com/ciey/p/6393150.html 站点可以生成之后遇到的问题：往里面添加文章太费劲了，需要一个编辑器，用上atom 问题：如何将atom 与hugo 关联起来.在atom中直接打开目录就可以，直接在atom中建立的md文件不符合显示规则不能显示，还是用hugo命令new出来比较好，new的时候注意选到post路径下。 http://www.gohugo.org
本地站点有了，现在的问题是怎么把代码放到git上,教程： https://yq.aliyun.com/articles/4071 然后在响应的repo里面就有上传的文件了
6. 发布网站 git的基本使用 先创建：git init 创建远端目录：git remote add origin https://github.</description>
    </item>
    
  </channel>
</rss>